{"version":3,"sources":["Components/SubComponents/Tabs.js","Components/Header.js","Components/Footer.js","Components/Routes/Portfolio.js","Components/Routes/Blog.js","Components/Routes/About.js","App.js","serviceWorker.js","index.js","Images/man.png","Images/website_for_portfolio_01.png","Images/website_for_portfolio_02.png"],"names":["CenteredTabs","location","useLocation","React","useState","pathname","value","setValue","Tabs","onChange","event","newValue","aria-label","centered","Tab","label","component","Link","to","Header","Grid","container","align","item","xs","src","ProfilePicture","alt","width","style","marginTop","Typography","variant","useStyles","makeStyles","root","backgroundColor","margin","overrides","fill","Footer","classes","justify","href","className","fontSize","maxWidth","media","height","Portfolio","direction","alignItems","spacing","Card","CardActionArea","CardMedia","image","websiteForPortfolio01","title","CardContent","websiteForPortfolio02","Blog","props","blogposts","console","log","moment","posted","format","listItems","map","blogpost","key","_id","Paper","elevation","Box","p","mt","author","body","About","sx","axios","require","theme","createMuiTheme","typography","h2","fontFamily","App","getBlogposts","get","then","response","setState","data","loading","catch","error","state","this","CssBaseline","path","exact","Component","Boolean","window","hostname","match","ReactDOM","render","basename","process","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.30e3050c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { \r\n    Tabs,\r\n    Tab\r\n} from '@material-ui/core';\r\nimport { \r\n    Link,\r\n    useLocation \r\n} from 'react-router-dom';\r\n\r\nexport default function CenteredTabs() {\r\n\r\n    let location = useLocation();\r\n    const [value, setValue] = React.useState(location.pathname);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n            <Tabs \r\n                value={value}\r\n                onChange={handleChange} \r\n                aria-label=\"navigation tabs\"\r\n                centered\r\n            >\r\n                <Tab\r\n                    value=\"/\"\r\n                    label=\"About\"\r\n                    component={Link}\r\n                    to=\"/\"\r\n                />\r\n                <Tab\r\n                    value=\"/portfolio\"\r\n                    label=\"Portfolio\"\r\n                    component={Link}\r\n                    to=\"/portfolio\"\r\n                />\r\n                <Tab\r\n                    value=\"/blog\"\r\n                    label=\"Blog\"\r\n                    component={Link}\r\n                    to=\"/blog\"\r\n                />\r\n            </Tabs>\r\n    );\r\n}","import React, { Fragment } from 'react';\r\nimport Grid from '@material-ui/core/Grid'; \r\nimport ProfilePicture from '../Images/man.png';\r\nimport Tabs from './SubComponents/Tabs';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function Header() {\r\n    return (\r\n        <Fragment>\r\n            <Grid\r\n                container\r\n                align=\"center\"\r\n            >\r\n                <Grid item xs={12}>\r\n                    <img \r\n                        src={ProfilePicture}\r\n                        alt=\"profile\"\r\n                        width=\"200px\"\r\n                        style={{ marginTop: \"16px\" }}\r\n                    >\r\n                    </img>\r\n                    <Typography variant=\"h2\">\r\n                        Kyle Johnson\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        Full-Stack Developer\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            <Tabs />\r\n        </Fragment>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { \r\n    Grid,\r\n    Link,\r\n    makeStyles \r\n} from '@material-ui/core';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        backgroundColor: \"inherit\",\r\n        width: \"100px\",\r\n        margin: \"0 auto\",\r\n    },\r\n    overrides: {\r\n        margin: \"16px\",\r\n        fill: \"inherit\",\r\n    },\r\n})\r\n\r\nexport default function Footer() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            justify=\"center\"\r\n        >\r\n            <Link\r\n                href=\"https://github.com/11kyle\"   \r\n            >\r\n                <GitHubIcon className={classes.overrides} fontSize=\"large\" />\r\n            </Link>\r\n            <Link\r\n                href=\"https://www.linkedin.com/in/kylejohnson11/\" \r\n            >\r\n                <LinkedInIcon className={classes.overrides} fontSize=\"large\" />\r\n            </Link>\r\n            <Link\r\n                href=\"#\"  \r\n            >\r\n                <PictureAsPdfIcon className={classes.overrides} fontSize=\"large\" />\r\n            </Link>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { \r\n    Grid,\r\n    Typography,\r\n    makeStyles,\r\n    Card,\r\n    CardActionArea,\r\n    CardContent,\r\n    CardMedia\r\n} from '@material-ui/core';\r\nimport websiteForPortfolio01 from '../../Images/website_for_portfolio_01.png';\r\nimport websiteForPortfolio02 from '../../Images/website_for_portfolio_02.png';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 600,\r\n        margin: \"16px auto 0 auto\",\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n})\r\n\r\nexport default function Portfolio() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        \r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"stretch\"\r\n            spacing={0}\r\n        >\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"One of the websites I created.\"\r\n                        image={websiteForPortfolio01}\r\n                        title=\"One of the websites I created.\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            Ghibli\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Built with React, Axios and custom CSS.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n\r\n            <Card className={classes.root}>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        alt=\"One of the websites I created.\"\r\n                        image={websiteForPortfolio02}\r\n                        title=\"One of the websites I created.\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"h5\" component=\"h2\">\r\n                            Ghibli\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" component=\"p\">\r\n                            Built with React, Axios and Bootstrap.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { \r\n    Grid,\r\n    Paper,\r\n    Typography,\r\n    Box\r\n} from '@material-ui/core'; \r\nimport moment from 'moment';\r\n\r\nexport default function Blog(props) {\r\n\r\n    const { blogposts } = props;\r\n\r\n    console.log(moment(blogposts[3].posted).format('dddd MMM D, YYYY'));\r\n\r\n    const listItems = blogposts.map((blogpost) => \r\n        <Grid item xs={12} key={blogpost._id}>\r\n            <Paper elevation={2} style={{maxWidth: \"600px\", margin: \"0 auto\"}}>\r\n                <Box p={2} mt={2}>\r\n                    <Typography variant=\"h6\">\r\n                        {blogpost.title}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                        {blogpost.posted}\r\n                    </Typography>\r\n                    <Typography>\r\n                        Author: {blogpost.author}\r\n                    </Typography>\r\n                    <Typography>\r\n                        {blogpost.body}\r\n                    </Typography>\r\n                </Box>\r\n            </Paper>\r\n        </Grid>\r\n    );\r\n\r\n    return(\r\n        <Grid\r\n            container\r\n            direction=\"column\"\r\n            alignItems=\"stretch\"\r\n            spacing={0}\r\n        >\r\n            {listItems}\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport {\r\n    Typography,\r\n    Grid,\r\n    Paper,\r\n    Box\r\n} from '@material-ui/core';\r\n\r\nexport default function About() {\r\n    return(\r\n        <Grid\r\n            container\r\n        >\r\n            <Grid item sx={12} style={{maxWidth: \"600px\", margin: \"0 auto\"}}>\r\n                <Paper elevation={2}>\r\n                    <Box p={2} mt={2}>\r\n                        <Typography variant=\"h6\">About Page</Typography>\r\n                    </Box>\r\n                </Paper>\r\n            </Grid>\r\n        </Grid> \r\n    );\r\n}","import React, { Component } from 'react';\nimport { \n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport Portfolio from './Components/Routes/Portfolio';\nimport Blog from './Components/Routes/Blog';\nimport About from './Components/Routes/About';\nimport { \n  MuiThemeProvider,\n  createMuiTheme,\n  CssBaseline\n} from '@material-ui/core';\n\nconst axios = require('axios');\n\nconst theme = createMuiTheme({\n  typography: { h2: { fontFamily: 'Quicksand, sans-serif'}}\n})\n\nexport default class App extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      blogposts: [],\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    this.getBlogposts();\n  }\n\n  getBlogposts = () => {\n    axios.get('https://cors-anywhere.herokuapp.com/https://kj-portfolio.herokuapp.com/api/blogpost')\n      .then(response => {\n        this.setState({\n          blogposts: response.data,\n          loading: false,\n        });\n      })\n      .catch(error => {\n        console.log(`Error fetching and parsing data`, error);\n      });\n  }\n\n  render() {\n    return(\n        <MuiThemeProvider theme={theme}>\n          <CssBaseline>\n            <Header />\n            <Switch>\n              <Route path='/portfolio'>\n                <Portfolio />\n              </Route>\n              <Route path='/blog'>\n                {\n                  (this.state.loading)\n                    ?<p>Loading...</p>\n                    : <Blog blogposts={this.state.blogposts} />\n                }\n                  </Route>\n              <Route  exact path='/'>\n                <About />\n              </Route>\n            </Switch>\n            <Footer />\n          </CssBaseline>\n      </MuiThemeProvider>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/man.9152be17.png\";","module.exports = __webpack_public_path__ + \"static/media/website_for_portfolio_01.9d571721.png\";","module.exports = __webpack_public_path__ + \"static/media/website_for_portfolio_02.6d828907.png\";"],"sourceRoot":""}